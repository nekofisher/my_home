#!/usr/bin/env python

###############################################################################
#
# Copyright 2011
# The Intellisis Corporation
#
# All rights reserved.
#
# $Id: run_spectral_nick.py 13155 2011-04-22 15:46:45Z nhilton $
#
###############################################################################


from optparse import OptionParser

import os
import sys
import tempfile

parser = OptionParser( usage = "makePDF [input.png, ...] out.pdf")

parser.add_option(
	"--no-show",
	action = "store_true",
	dest = "NO_SHOW",
	default = False,
	help = "Prevents the auto open of the resulting PDF"
	)

(options, argv) = parser.parse_args()


if len(argv) < 1:
	print "Must specify at least one file to convert"
	parser.print_help()
	sys.exit(1)


if  (not argv[-1].endswith(".pdf") and not argv[-1].endswith(".PDF")):
	print "last argument needs to be a pdf output filename"
	parser.print_help()
	sys.exit(1)


header = """
%% Generated by makePDF

%% Document preamble

\\documentclass[12pt,english]{article}
\\usepackage{mathptmx}
\\usepackage{helvet}
\\usepackage{courier}
\\renewcommand{\\familydefault}{\\sfdefault}
\\usepackage[T1]{fontenc}
\\usepackage[latin9]{inputenc}
\\usepackage[landscape,letterpaper]{geometry}

%% \\geometry{verbose}

\\geometry{verbose,lmargin=-1.5cm,rmargin=0cm}

\\usepackage{float}
\\usepackage{graphicx}
\\usepackage{babel}
\\pagestyle{empty}

\\begin{document}

"""

template = """
%% Figure Template

\\begin{figure}
\\begin{centering}
\\includegraphics[width=0.80\\paperwidth,keepaspectratio]{%s}
\\caption{%s}
\\par\\end{centering}
\\end{figure}

"""

latex = header

count = 0

for f in argv[:-1]:

	if f.endswith(".png") or f.endswith(".PNG"):
		print "Adding %s" % f

		abs_filename = os.path.abspath(f)
		caption_filename = f.replace("_", "\_")

		latex += template %(abs_filename, caption_filename)
		count += 1

	elif f.endswith(".pdf") or f.endswith(".PDF"):
		print "Adding %s" % f

		# Strip off the .pdf
		f = f[:-4]

		abs_filename = os.path.abspath(f)
		caption_filename = f.replace("_", "\_")

		latex += template %(abs_filename, caption_filename)
		count += 1

if count == 0:
	raise RuntimeError("No .png or .pdf files added!")

latex += """

\\end{document}

"""

##############################################################################
# Write out a .tex file

temp_dir = tempfile.mkdtemp(prefix = "/tmp/")

temp_tex = "%s/temp.tex" %(temp_dir)

fd = open(temp_tex, "w")

fd.write(latex)

fd.close()

##############################################################################
# process with pdflatex

os.system("cd '%s'; pdflatex temp.tex" % temp_dir)

# Copy the the pdf back

os.system("mv %s/temp.pdf %s" %( temp_dir, argv[-1] ))

# Clean up

os.system("rm -rf %s" % temp_dir)

##############################################################################
# Display the PDF

if options.NO_SHOW:
	pass
else:
	os.system("evince %s" % argv[-1])



# :mode=python: